getgenv().autoTraining = false getgenv().autoClaimingEventGifts = false getgenv().autoClaimNormalGifts = false getgenv().autoOpeningEggs = false getgenv().autoFighting = false getgenv().autoWinFight = false getgenv().autoClaimOPPet = false getgenv().autoSpinning = false getgenv().autoDeletingTrash = false getgenv().autoDeletingMythicals = false getgenv().equipBest = false function autoTrain() spawn(function() while wait() do if autoTraining then game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Power"):WaitForChild("Re_ClickPower"):FireServer() wait() end end end) end function autoClaimEventGifts() spawn(function() while wait() do if autoClaimingEventGifts then local args = { [1] = "OnlineGift001" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift002" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift003" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift004" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift005" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift006" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift007" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift008" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift009" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift010" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift011" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift012" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() end end end) end function autoClaimGifts() spawn(function() while wait() do if autoClaimingGifts then local args = { [1] = "OnlineGift001" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift002" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift003" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift004" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift005" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift006" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift007" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift008" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift009" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift010" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift011" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() local args = { [1] = "OnlineGift012" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Re_ClaimOnline"):FireServer(unpack(args)) wait() end end end) end function autoFight() spawn(function() while wait() do if autoFighting then local args = { [1] = 4, [2] = 5 } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Fight"):WaitForChild("Re_Challenge"):FireServer(unpack(args)) autoWinFights() wait() end end end) end function autoWinFights() spawn(function() while wait() do if autoWinFight then local args = { [1] = true } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Fight"):WaitForChild("Rf_Finish"):InvokeServer(unpack(args)) wait() end end end) end function autoClaimOP() spawn(function() while wait() do if autoClaimOPPet then local args = { [1]= "Event Egg" } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_ClaimOPPet"):FireServer(unpack(args)) wait() end end end) end function autoSpin() spawn(function() while wait() do if autoSpinning then local args = { [1] = false } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Stats"):WaitForChild("Rf_Spin"):InvokeServer(unpack(args)) wait() end end end) end function autoOpenEggs(EggType, AutoDeletePets) spawn(function() while wait() do if autoOpeningEggs then local args = { [1] = "Hatch", [2] = EggType, [3] = AutoDeletePets } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("RE_Draw"):FireServer(unpack(args)) wait() end end end) end function equiptBestPets() spawn(function() while wait() do if equiptBest then local args = { [1] = true } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_EquipBest"):FireServer(unpack(args)) wait(30) end end end) end function Teleport(World) spawn(function() local args = { [1] = World } game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("World"):WaitForChild("Rf_Teleport"):InvokeServer(unpack(args)) wait() end) end local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))() local window = lib:Load("Made By Tariq", "Default") local tab = lib.newTab("Main", "Image Id here") local tab2 = lib.newTab("Eggs", "") local tab3 = lib.newTab("Teleport", "") local selectedWorld; local selectedEgg; local deletePets = {}; tab.newToggle("Auto Train", "auto trains.", false, function(bool) autoTraining = bool autoTrain() end) tab.newToggle("Auto Equip Best", "Auto equips best pets.", false, function(bool) equiptBest = bool equiptBestPets() end) tab.newToggle("Auto Claim Event Gifts", ".", false, function(bool) autoClaimingEventGifts = bool autoClaimEventGifts() end) tab.newToggle("Auto Claim Normal Gifts", ".", false, function(bool) autoClaimNormalGifts = bool autoClaimGifts() end) tab.newToggle("Auto Fight", ".", false, function(bool) autoFighting = bool autoFight() end) tab.newToggle("Auto Win Fights", ".", false, function(bool) autoWinFight = bool autoWinFights() end) tab.newToggle("Auto Claim OP Pet", ".", false, function(bool) autoClaimOPPet = bool autoClaimOP() end) tab.newToggle("Auto Spin", "Auto spins.", false, function(bool) autoSpinning = bool autoSpin() end) tab2.newToggle("Auto Delete Pets", "Auto deletes rares, epics and legendaries (any egg).", false, function(bool) autoDeletingTrash = bool end) tab2.newToggle("Auto Delete Mythicals", "Auto deletes mythical pets (any egg).", false, function(bool) autoDeletingMythicals = bool end) tab2.newToggle("Auto Open Eggs", ".", false, function(bool) autoOpeningEggs = bool end) tab2.newToggle("Normal Egg", "World 1 normal egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet001", [2] = "Pet002", [3] = "Pet003", [4] = "Pet004" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet001", [2] = "Pet002", [3] = "Pet003" } end selectedEgg = "Draw001" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Shiny Egg", "World 1 shiny egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet001", [2] = "Pet002", [3] = "Pet003", [4] = "Pet004" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet001", [2] = "Pet002", [3] = "Pet003" } end selectedEgg = "Draw002" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Normal Egg", "World 2 normal egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet006", [2] = "Pet007", [3] = "Pet008", [4] = "Pet009" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet006", [2] = "Pet007", [3] = "Pet008" } end selectedEgg = "Draw003" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Shiny Egg", "World 2 shiny egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet006", [2] = "Pet007", [3] = "Pet008", [4] = "Pet009" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet006", [2] = "Pet007", [3] = "Pet008" } end selectedEgg = "Draw004" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Normal Egg", "World 3 normal egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet011", [2] = "Pet012", [3] = "Pet013", [4] = "Pet014" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet011", [2] = "Pet012", [3] = "Pet013" } end selectedEgg = "Draw005" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Shiny Egg", "World 3 shiny egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet011", [2] = "Pet012", [3] = "Pet013", [4] = "Pet014" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet011", [2] = "Pet012", [3] = "Pet013" } end selectedEgg = "Draw006" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Normal Egg", "World 4 normal egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet016", [2] = "Pet017", [3] = "Pet018", [4] = "Pet019" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet016", [2] = "Pet017", [3] = "Pet018" } end selectedEgg = "Draw007" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Shiny Egg", "World 4 shiny egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet016", [2] = "Pet017", [3] = "Pet018", [4] = "Pet019" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet016", [2] = "Pet017", [3] = "Pet018" } end selectedEgg = "Draw008" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Normal Egg", "World 5 normal egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet021", [2] = "Pet022", [3] = "Pet023", [4] = "Pet024" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet021", [2] = "Pet022", [3] = "Pet023" } end selectedEgg = "Draw009" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab2.newToggle("Shiny Egg", "World 5 shiny egg.", false, function(bool) if autoDeletingTrash and autoDeletingMythicals then deletePets = { [1] = "Pet021", [2] = "Pet022", [3] = "Pet023", [4] = "Pet024" } elseif autoDeletingMythicals and not autoDeletingMythicals then deletePets = { [1] = "Pet021", [2] = "Pet022", [3] = "Pet023" } end selectedEgg = "Draw010" autoOpeningEggs = bool autoOpenEggs(selectedEgg, deletePets) end) tab3.newButton("Bake World", "Teleports you to the first world. (Gold machine)", function() selectedWorld = "World001" Teleport(selectedWorld) end) tab3.newButton("Seafood World", "Teleports you to the first world. (Gold machine & Index)", function() selectedWorld = "World002" Teleport(selectedWorld) end) tab3.newButton("Desert World", "Teleports you to the first world. (Rainbow machine)", function() selectedWorld = "World003" Teleport(selectedWorld) end) tab3.newButton("Crystal World", "Teleports you to the first world. (Index)", function() selectedWorld = "World004" Teleport(selectedWorld) end) tab3.newButton("Pinetree World", "Teleports you to the first world. (Rainbow machine)", function() selectedWorld = "World005" Teleport(selectedWorld) end)