print("new anti-lock and resolver update.")
getgenv().ResolveVelocity = 2
getgenv().antilock = false;
getgenv().smooth = false;
getgenv().res = 0.001473
getgenv().AutoHighArm = false;
getgenv().lock = false;
getgenv().resolve = false;
getgenv().AutoInfHealth = false;
getgenv().autoRst = false;
getgenv().stomp = false;
getgenv().tp = false;
getgenv().silent = false;
getgenv().FLING = false;
getgenv().VIEW = false;
getgenv().customUI = false;
getgenv().customMv = false;
getgenv().foodspawn = false;
getgenv().camera = game.Workspace.CurrentCamera;
getgenv().user = nil;
getgenv().VICTIM = nil;
getgenv().silentVic = nil;
getgenv().SA = 0.5
getgenv().TS = game.TweenService;
getgenv().TI = TweenInfo.new(SA, Enum.EasingStyle.Quad);
getgenv().camLerp = 0.463;
getgenv().RS = game:GetService("RunService");
getgenv().prediction = 0.282;
getgenv().teammates = {};
getgenv().m = 8;
getgenv().n = 5.5;
getgenv().limit = 320;
getgenv().aim = false;
getgenv().mag = nil;
getgenv().aimpart = "UpperTorso"
getgenv().aimparts = { "HumanoidRootPart", "Head", "UpperTorso", "LowerTorso", "LeftArm", "RightArm", "LeftLeg", "RightLeg" }
local value, ping
value = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
ping = tonumber(string.split(value, '(')[1])
local type = Enum.ThumbnailType.HeadShot
local size = Enum.ThumbnailSize.Size420x420

-- Anti lock stuff
getgenv().AntiDirection = "Behind"
getgenv().Direction = nil

if getgenv().AntiDirection == "Behind" then
    getgenv().Direction = Vector3.new(0, 0, -1)
elseif getgenv().AntiDirection == "Down" then
    getgenv().Direction = Vector3.new(0, -1, 0)
elseif getgenv().AntiDirection == "Forward" then
    getgenv().Direction = Vector3.new(0, 0, 1)
elseif getgenv().AntiDirection == "Left" then
    getgenv().Direction = Vector3.new(-1, 0, 0)
elseif getgenv().AntiDirection == "One" then
    getgenv().Direction = Vector3.new(1, 1, 1)
elseif getgenv().AntiDirection == "Right" then
    getgenv().Direction = Vector3.new(1, 0, 0)
elseif getgenv().AntiDirection == "Up" then
    getgenv().Direction = Vector3.new(0, 1, 0)
elseif getgenv().AntiDirection == "Zero" then
    getgenv().Direction = Vector3.new(0, 0, 0)
end


game:GetService("RunService").Heartbeat:Connect(function()
    if getgenv().antilock then
        print("Anti-lock on.")
        local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
        local abc, cf = hrp.AssemblyLinearVelocity, hrp.CFrame
        hrp.AssemblyLinearVelocity = getgenv().Direction * (2^16)
        hrp.CFrame = cf * CFrame.Angles(0,math.rad(0.1),0)
        RS.RenderStepped:Wait()
        hrp.AssemblyLinearVelocity = abc
    end
end)


function findfood()
    local found = {}
    local succ, err = pcall(function()
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name:lower() == "[pizza]" and v:FindFirstChildWhichIsA("ClickDetector") then
                table.insert(found, v)
            end
            if v.Name:lower() == "[burger]" and v:FindFirstChildWhichIsA("ClickDetector") then
                table.insert(found, v)
            end
            if v.Name:lower() == "[donut]" and v:FindFirstChildWhichIsA("ClickDetector") then
                table.insert(found, v)
            end
            if v.Name:lower() == "[popcorn]" and v:FindFirstChildWhichIsA("ClickDetector") then
                table.insert(found, v)
            end
            if v.Name:lower() == "[chicken]" and v:FindFirstChildWhichIsA("ClickDetector") then
                table.insert(found, v)
            end
        end
    end)
    if succ then
        return found
    end
    if err then
        print("Unable to find food... ", err)
    end
end
function customLayout()
    local me = game.Players.LocalPlayer
    me.PlayerGui.gui.Bar.Armor.BackgroundColor3 = Color3.fromRGB(127,77,10)
    me.PlayerGui.gui.Bar.Armor.ImageLabel.BackgroundColor3 = Color3.fromRGB(217,122,20)
    me.PlayerGui.gui.Bar.Health.BackgroundColor3 = Color3.fromRGB(94,31,31)
    me.PlayerGui.gui.Bar.Health.ImageLabel.BackgroundColor3 = Color3.fromRGB(255,0,0)
end
local findarmour = function()
    for _, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name:lower() == "[high-medium armor]" or v.Name:lower() == "[high armor]" then
            return v
        end
    end
    if not Highmed then
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.Name:lower() == "[medium armor]" then
                return v
            end
        end
    end
end
local findtact = function()
    for _, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "[Tactical Shotgun]" and v:FindFirstChildWhichIsA("ClickDetector") then
            return v
        end
    end
end
local findusp = function()
    for _, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "[USP]" and v:FindFirstChildWhichIsA("ClickDetector") then
            return v
        end
    end
end

getgenv().armour = findarmour();
getgenv().tact = findtact();
getgenv().usp = findusp();
getgenv().food = findfood()
local mt = getrawmetatable(game)
local pos
local old = mt.__namecall
local T

local function autoBuyArmour()
    local me = game.Players.LocalPlayer.Name
    if AutoHighArm and game.Workspace:FindFirstChild(me):GetAttribute("Armor") < 120 and armour then
        fireclickdetector(armour.ClickDetector)
    end
end

-- CHATSPY
loadstring(game:HttpGet("https://pastebin.com/raw/nzXicwc1", true))()
-- ANTI CHAT LOGGER
loadstring(game:HttpGet("https://raw.githubusercontent.com/AnthonyIsntHere/anthonysrepository/main/scripts/AntiChatLogger.lua", true))()

local function getuser(input)
    local PLAYERS = game.Players:GetChildren()
    if input == "" or input == " " then return end
    for _, PLAYER in ipairs(PLAYERS) do
        local PLR = PLAYER.Name:lower()
        local DISPLAY = PLAYER.DisplayName:lower()
        local INP = input:lower()
        if string.sub(PLR,1,#INP) == INP or string.sub(DISPLAY,1,#INP) == INP then
            return PLAYER.Name
        end
    end
end

local function getnear()
    local LocalName = game.Players.LocalPlayer.Name
    local dis = math.huge
    local plr = nil
    local plrs = {}
    for _, v in pairs(game.Players:GetChildren()) do
        if v ~= game.Players.LocalPlayer and not game.Workspace[v.Name]:GetAttribute("Knocked") and not table.find(teammates, v.Name) then
            table.insert(plrs, v.Name)
        end
    end
    for _, v in ipairs(plrs) do
        local disDiff = (game.Workspace[LocalName].HumanoidRootPart.Position - game.Workspace[v].HumanoidRootPart.Position).magnitude
        if disDiff < dis then
            dis = disDiff
            plr = game.Workspace[v]
        end
    end
    return plr
end

local function silentLock(vic)
    spawn(function()
        silentVic = game.workspace[vic]
        while task.wait() do
            if silent then
                mag = silentVic.Humanoid.MoveDirection.Magnitude
                local TargetVelocity = Vector3.new(silentVic.UpperTorso.AssemblyLinearVelocity.X * (mag * (ping * res)), silentVic.UpperTorso.AssemblyLinearVelocity.Y * ((mag * (ping * res)) / 3.44), silentVic.UpperTorso.AssemblyLinearVelocity.Z * (mag * (ping * res)))
                if silentVic and game.Players[silentVic.Name] and not silentVic:GetAttribute("Knocked") then
                    if not resolve then
                        camera.CFrame = CFrame.new(camera.CFrame.p, (silentVic.UpperTorso.Position + TargetVelocity))
                    else
                        TargetVelocity = Vector3.new(ResolveVelocity * (mag * (ping * res)), 0, ResolveVelocity * (mag * (ping * res)))
                        camera.CFrame = CFrame.new(camera.CFrame.p, (silentVic.UpperTorso.Position + TargetVelocity))
                    end
                end
            end
            if silent and smooth then
                T:Play()
            end
            if not silent then break end
        end
    end)
end

local function startLock(loser)
    spawn(function()
        while task.wait() do
            if lock then
                target = game.Players[loser].Character
                if target == nil then
                    target = game.Workspace[loser]
                end
                mag = target.Humanoid.MoveDirection.Magnitude
                local TargetVelocity = Vector3.new(target.UpperTorso.AssemblyLinearVelocity.X * (mag * (ping * res)), target.UpperTorso.AssemblyLinearVelocity.Y * ((mag * (ping * res)) / 3.44), target.UpperTorso.AssemblyLinearVelocity.Z * (mag * (ping * res)))
                if target and game.Players[target.Name] and not target:GetAttribute("Knocked") then
                    if not resolve then
                        camera.CFrame = CFrame.new(camera.CFrame.p, (target.UpperTorso.Position + TargetVelocity))
                    else
                        TargetVelocity = Vector3.new(ResolveVelocity * (mag * (ping * res)), 0, ResolveVelocity * (mag * (ping * res)))
                        camera.CFrame = CFrame.new(camera.CFrame.p, (target.UpperTorso.Position + TargetVelocity))
                    end
                end
            end
            if not lock then break end 
        end
    end)
end

local function normalTp(person)
    local LPN = game.Players.LocalPlayer.Name
    local LP = game.Workspace[LPN]
    local VP = game.Workspace[person.Name]
    if LP.HumanoidRootPart and VP.HumanoidRootPart then
        LP.HumanoidRootPart.CFrame = CFrame.new(VP.UpperTorso.Position)
    end
end

local function Notif(name, desc, image, dur)
    game.StarterGui:SetCore("SendNotification", {
        Title = name,
        Text = desc,
        Icon = image,
        Duration = dur
    })
end

local function UnLockNotif()
    game.StarterGui:SetCore("SendNotification", {
        Title = "UnLock Notification",
        Text = "Unlocked...",
        Icon = "",
        Duration = 0.7
    })
end

local function autoStomp()
    game:GetService("ReplicatedStorage"):WaitForChild("MAINEVENT"):FireServer("STOMP")
end

if game.CoreGui:FindFirstChild("DrRay") then
    game.CoreGui:FindFirstChild("DrRay"):Destroy()
    if game.CoreGui:FindFirstChild("ButtonHandler") then
        game.CoreGui:FindFirstChild("ButtonHandler"):Destroy()
    end
end

local xchange
local zchange

game.Players.LocalPlayer.Chatted:Connect(function(message)
    local msg = string.split(message," ")
    local cmd = msg[1]
    local name = msg[2]
    if cmd == ".ws" then
        local plr = getuser(name)
        if not teammates[plr] then
            table.insert(teammates, plr)
            Notify("Whitelist", plr.. " has been whitelisted!", "", 0.7)
            for i,v in next, teammates do print(v) end
        else return end
    end
end)
RS.RenderStepped:Connect(function()
    value = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    ping = tonumber(string.split(value, '(')[1])
    if ping > limit then
        ping = limit
    end
    if user ~= nil then
        local succ, err = pcall(function()
            local hum = game.workspace[user].Humanoid
            if hum.MoveDirection.X > 0 then
                xchange = n
            end
            if hum.MoveDirection.X < 0 then
                xchange = -n
            end
            if hum.MoveDirection.Z > 0 then
                zchange = n
            end
            if hum.MoveDirection.Z < 0 then
                zchange = -n
            end
            pos = Vector3.new(game.workspace[user][aimpart].Position.X + xchange, game.workspace[user][aimpart].Position.Y, game.workspace[user][aimpart].Position.Z + zchange)
            if err then
                print("Something went wrong: ", err)
            end
        end)
    end
    if aim then
        setreadonly(mt, false)
        mt.__namecall = newcclosure(function(self, ...)
            local args = {...}
            if getnamecallmethod() == 'FireServer' and self.Name == 'MAINEVENT' then
                if tostring(args[1]) == 'MOUSE' and aim then
                    args[2] = pos
                else
                    return old(self, unpack(args))
                end
            end
            return old(self, unpack(args))
        end)
        setreadonly(mt, true)
    end
    if customUI then
        customLayout()
    end
    if customMv then
        customMacro()
    end
    if AutoHighArm then
        autoBuyArmour()
    end
    if stomp then
        autoStomp()
    end
    if foodspawn then
        for _,v in ipairs(food) do
            fireclickdetector(v.ClickDetector)
        end
    end
    local rlBtn = game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("gui")["mobile ppl"].rl
    if rlBtn.Size ~= UDim2.new(0, 60, 0, 60) then
        rlBtn.Size = UDim2.new(0, 70, 0, 70)
    end
    local plrs = game.Players
    local lplr = plrs.LocalPlayer
    for _, v in pairs(plrs:GetPlayers()) do
        if v:GetAttribute("group") == lplr:GetAttribute("group") and v:GetAttribute("group") ~= 0 then
            table.insert(teammates, v.Name)
        end
    end
end)

local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
local window = lib:Load(game.Players.LocalPlayer.DisplayName, "Default")
local tab = lib.newTab("Main", "")
local tab2 = lib.newTab("Target", "")
local tab3 = lib.newTab("Player", "")
local tab4 = lib.newTab("AimLock test", "")
local btnGui = Instance.new("ScreenGui")
btnGui.Name = "ButtonHandler"
btnGui.Parent = game.CoreGui
btnGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local colours = {
    "red",
    "lightred",
    "orange",
    "yellow",
    "blue",
    "darkblue",
    "teal",
    "pink",
    "purple",
    "regular"
}
local colour = nil

tab.newDropdown("Pick A Colour", "", colours, function(picked)
    colour = picked
    return colour
end)
tab.newButton("Apply Sky Colour", "", function()
    game.Players.LocalPlayer:SetAttribute("skycolor", colour)
end)
tab.newToggle("Auto Buy High-Medium Armour", "", false, function(bool)
    AutoHighArm = bool
end)
tab.newToggle("Auto Stomp", "", false, function(bool)
    stomp = bool
end)
tab.newToggle("Custom Layout", "", false, function(bool)
    customUI = bool
end)
tab.newToggle("Auto Spawn With Food", "", false, function(bool)
    foodspawn = bool
end)
tab.newButton("Custom Macro View", "", function()
    local LS = game.Players.LocalPlayer.PlayerScripts.Macro
    for i, v in pairs(getsenv(LS)) do
        for _, cons in next, getconstants(getsenv(LS).inout) do
            setconstant(getsenv(LS).inout, 1, m)
        end
    end
end)
tab.newButton("USP and Tact SG", "", function()
    fireclickdetector(usp.ClickDetector)
    fireclickdetector(tact.ClickDetector)
end)
tab2.newInput("Username", "Username to lock on.", function(inp)
    user = getuser(inp)
end)
tab2.newToggle("Lock On User", "Starts the lock.", false, function(bool)
    if not bool then
        UnLockNotif()
        VICTIM = nil
    end
    if bool then
        Notif("Lock Notif", "Locked on: "..user, "", 0.7)
    end
    lock = bool
    startLock(user)
end)
tab2.newToggle("View Player", "Views selected player.", false, function(bool)
    VIEW = bool
    local NAME = game.Players.LocalPlayer.Name
    local ME = game.Workspace[NAME]
    local normalCam = ME.Humanoid
    if user and game.Workspace[user] and VIEW then
        if ME then
            camera.CameraSubject = game.Workspace[user].Humanoid
        else
            camera.CameraSubject = normalCam
        end
    else
        camera.CameraSubject = normalCam
    end
    if not VIEW or not game.workspace[user] then
        camera.CameraSubject = normalCam
    end
end)
tab2.newButton("Teleport To User", "", function()
    normalTp(user)
end)

tab3.newToggle("Camlock Resolver", "Still fixing it.", false, function(bool)
    resolve = bool
end)
tab3.newToggle("Camlock Smoothing", "", false, function(bool)
    smooth = bool
end)
tab3.newToggle("Anti-lock", "", false, function(bool)
    antilock = bool
end)
tab3.newDropdown("Anti-lock's direction", "direction to anti lock.", { "Forward", "Behind", "Up", "Down", "Right", "Left", "One", "Zero" }, function(pick)
    AntiDirection = pick
end)
tab3.newInput("Smoothing amount", "", function(amt)
    local num = tonumber(amt)
    SA = num
end)
tab3.newInput("Prediction Amount", "", function(amt)
    if amt == "def" then
        amt = 0.001473
    end
    local num = tonumber(amt)
    print(num)
    res = num
end)
tab3.newButton("Lock Button", "Creates a new lock button.", function()
    if not game.CoreGui.ButtonHandler:FindFirstChild("LButton") then
        local btn = Instance.new("TextButton")
        btn.Name = "LButton"
        btn.Parent = btnGui
        btn.BackgroundColor3 = Color3.fromRGB(3,40,53)
        btn.BorderSizePixel = 0
        btn.Position = UDim2.new(0, 737, 0, 35)
        btn.Size = UDim2.new(0, 100, 0, 50)
        btn.Font = Enum.Font.GothamBlack
        btn.Text = "Lock"
        btn.TextColor3 = Color3.new(1,1,1)
        btn.TextSize = 18
        
        local corner = Instance.new("UICorner")
        corner.Parent = btn
        corner.CornerRadius = UDim.new(0,10)
        corner.Name = "CORNER"
        
        btn.MouseButton1Click:Connect(function()
            local slockbtn = game.CoreGui.ButtonHandler:FindFirstChild("SilentButton")
            if lock then
                lock = false
                UnLockNotif()
                VICTIM = nil
                btn.Text = "Lock"
            elseif not lock and user then
                if game.Players[user] then
                    lock = true
                    Notif("Lock Notif", "Locked on: "..user, "", 0.7)
                    btn.Text = "Unlock"
                    if slockbtn then
                        silent = false
                        silentVic = nil
                        slockbtn.Text = "Silent Lock"
                    end
                end
            end
            startLock(user)
        end)
    end
end)
tab3.newButton("Silent Lock", "Locks on the closest person.", function()
    if not game.CoreGui.ButtonHandler:FindFirstChild("SilentButton") then
        local silentBtn = Instance.new("TextButton")
        silentBtn.Name = "SilentButton"
        silentBtn.Parent = game.CoreGui:FindFirstChild("ButtonHandler")
        silentBtn.BackgroundColor3 = Color3.fromRGB(3,40,53)
        silentBtn.BorderSizePixel = 0
        silentBtn.BackgroundTransparency = 0.1
        silentBtn.Position = UDim2.new(0, 630, 0, -15)
        silentBtn.Size = UDim2.new(0, 100, 0, 50)
        silentBtn.Font = Enum.Font.GothamBlack
        silentBtn.Text = "Silent Lock"
        silentBtn.TextColor3 = Color3.new(1,1,1)
        silentBtn.TextSize = 16
        silentBtn.TextTransparency = 0.132
        
        local corner = Instance.new("UICorner")
        corner.Parent = silentBtn
        corner.CornerRadius = UDim.new(0,10)
        corner.Name = "CORNER"
        
        local lockbtn = game.CoreGui.ButtonHandler:FindFirstChild("LButton")
        local bozo
        
        silentBtn.MouseButton1Click:Connect(function()
            if not silent then
                silent = true
                if lockbtn then
                    lock = false
                    lockbtn.Text = "Lock"
                end
                silentBtn.Text = "Unlock Silent"
                bozo = getnear()
                Notif("Silent Notification", "Display: ".. tostring(game.workspace[bozo.Name].Humanoid.DisplayName), "", 0.7)
            elseif silent then
                silent = false
                UnLockNotif()
                silentVic = nil
                silentBtn.Text = "Silent Lock"
            end
            silentLock(bozo.Name)
        end)
    end
end)
tab3.newButton("Armour Button", "Creates a new button for auto armour quick access.", function()
    if not game.CoreGui.ButtonHandler:FindFirstChild("AButton") then
        local armBtn = Instance.new("TextButton")
        armBtn.Name = "AButton"
        armBtn.Parent = game.CoreGui:FindFirstChild("ButtonHandler")
        armBtn.BackgroundColor3 = Color3.fromRGB(10,215,10)
        armBtn.BorderSizePixel = 0
        armBtn.Position = UDim2.new(0, 757, 0, -3)
        armBtn.Size = UDim2.new(0, 85, 0, 42.5)
        armBtn.Font = Enum.Font.GothamBlack
        armBtn.Text = "Auto Armour"
        armBtn.TextColor3 = Color3.new(1, 1, 1)
        armBtn.TextSize = 12
        
        local corner = Instance.new("UICorner")
        corner.Parent = armBtn
        corner.CornerRadius = UDim.new(0,10)
        corner.Name = "CORNER"
        
        armBtn.MouseButton1Click:Connect(function()
            if not AutoHighArm then
                armBtn.BackgroundColor3 = Color3.fromRGB(215,5,10)
                AutoHighArm = true
                armBtn.Text = "Unauto Armour"
            elseif AutoHighArm then
                armBtn.BackgroundColor3 = Color3.fromRGB(10,215,10)
                AutoHighArm = false
                armBtn.Text = "Auto Armour"
            end
        end)
    end
end)
tab3.newButton("Destroy All Buttons", "Destroys all buttons created by this script.", function()
    if game.CoreGui:FindFirstChild("ButtonHandler") then
        game.CoreGui:FindFirstChild("ButtonHandler"):Destroy()
    end
    btnGui = Instance.new("ScreenGui")
    btnGui.Name = "ButtonHandler"
    btnGui.Parent = game.CoreGui
    btnGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
end)
tab3.newButton("Kick", "", function()
    local LP = game.Players.LocalPlayer
    if LP then
        LP:Kick("Dipped, GG.")
    end
end)
tab4.newInput("Aimlock stud predict", "", function(amt)
    local num = tonumber(amt)
    if type(num) == "number" then
        n = num
    else
        n = 5.5
    end
end)
tab4.newToggle("Aimlock", "just a test", false, function(bool)
    aim = bool
end)
tab4.newDropdown("Aimlock Part", "part to aimlock on.", aimparts, function(part)
    aimpart = part
end)