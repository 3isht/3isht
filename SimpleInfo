--[[
      SIMPLE INFO GUI FOR MY OWN SCRIPT!
]]

local Custom = {};

-- StarterGui.SimpleInfo
Custom["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
Custom["1"]["IgnoreGuiInset"] = true;
Custom["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets;
Custom["1"]["Name"] = [[SimpleInfo]];
Custom["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
Custom["1"]["ResetOnSpawn"] = false;

-- StarterGui.SimpleInfo.Main
Custom["2"] = Instance.new("Frame", Custom["1"]);
Custom["2"]["Active"] = true;
Custom["2"]["BorderSizePixel"] = 0;
Custom["2"]["BackgroundColor3"] = Color3.fromRGB(41, 39, 39);
Custom["2"]["Draggable"] = true;
Custom["2"]["Selectable"] = true;
Custom["2"]["Size"] = UDim2.new(0, 150, 0, 250);
Custom["2"]["Position"] = UDim2.new(0.2222, 0, 0.09764, 0);
Custom["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["2"]["Name"] = [[Main]];

-- StarterGui.SimpleInfo.Main.UICorner
Custom["3"] = Instance.new("UICorner", Custom["2"]);
Custom["3"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.SimpleInfo.Main.TextLabel
Custom["4"] = Instance.new("TextLabel", Custom["2"]);
Custom["4"]["TextWrapped"] = true;
Custom["4"]["BorderSizePixel"] = 0;
Custom["4"]["TextStrokeColor3"] = Color3.fromRGB(85, 85, 85);
Custom["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["4"]["TextSize"] = 24;
Custom["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["4"]["TextColor3"] = Color3.fromRGB(223, 223, 223);
Custom["4"]["BackgroundTransparency"] = 1;
Custom["4"]["Size"] = UDim2.new(0.9, 0, 0.13, 0);
Custom["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["4"]["Text"] = [[Simple Info]];
Custom["4"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame
Custom["5"] = Instance.new("Frame", Custom["2"]);
Custom["5"]["BorderSizePixel"] = 0;
Custom["5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
Custom["5"]["Size"] = UDim2.new(0.9, 0, 0.8, 0);
Custom["5"]["Position"] = UDim2.new(0.05, 0, 0.17, 0);
Custom["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);

-- StarterGui.SimpleInfo.Main.Frame.Safeplay
Custom["Safeplay"] = Instance.new("TextLabel", Custom["5"]);
Custom["Safeplay"]["BorderSizePixel"] = 0;
Custom["Safeplay"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["Safeplay"]["TextSize"] = 25;
Custom["Safeplay"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["Safeplay"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
Custom["Safeplay"]["BackgroundTransparency"] = 1;
Custom["Safeplay"]["Size"] = UDim2.new(0.9, 0, 0.15, 0);
Custom["Safeplay"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["Safeplay"]["Text"] = [[Safe Play : OFF]];
Custom["Safeplay"]["Name"] = [[Safeplay]];
Custom["Safeplay"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame.Safeplay.UIPadding
Custom["7"] = Instance.new("UIPadding", Custom["Safeplay"]);
Custom["7"]["PaddingLeft"] = UDim.new(0, 10);

-- StarterGui.SimpleInfo.Main.Frame.UIListLayout
Custom["8"] = Instance.new("UIListLayout", Custom["5"]);
Custom["8"]["Padding"] = UDim.new(0, 3);
Custom["8"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.SimpleInfo.Main.Frame.Antilock
Custom["Antilock"] = Instance.new("TextLabel", Custom["5"]);
Custom["Antilock"]["BorderSizePixel"] = 0;
Custom["Antilock"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["Antilock"]["TextSize"] = 25;
Custom["Antilock"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["Antilock"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
Custom["Antilock"]["BackgroundTransparency"] = 1;
Custom["Antilock"]["Size"] = UDim2.new(0.9, 0, 0.15, 0);
Custom["Antilock"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["Antilock"]["Text"] = [[Antilock : OFF]];
Custom["Antilock"]["Name"] = [[Antilock]];
Custom["Antilock"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame.Antilock.UIPadding
Custom["a"] = Instance.new("UIPadding", Custom["Antilock"]);
Custom["a"]["PaddingLeft"] = UDim.new(0, 10);

-- StarterGui.SimpleInfo.Main.Frame.Strafe
Custom["Strafe"] = Instance.new("TextLabel", Custom["5"]);
Custom["Strafe"]["BorderSizePixel"] = 0;
Custom["Strafe"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["Strafe"]["TextSize"] = 25;
Custom["Strafe"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["Strafe"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
Custom["Strafe"]["BackgroundTransparency"] = 1;
Custom["Strafe"]["Size"] = UDim2.new(0.9, 0, 0.15, 0);
Custom["Strafe"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["Strafe"]["Text"] = [[Strafe : OFF]];
Custom["Strafe"]["Name"] = [[Strafe]];
Custom["Strafe"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame.Strafe.UIPadding
Custom["c"] = Instance.new("UIPadding", Custom["Strafe"]);
Custom["c"]["PaddingLeft"] = UDim.new(0, 10);

-- StarterGui.SimpleInfo.Main.Frame.Resolver
Custom["Resolver"] = Instance.new("TextLabel", Custom["5"]);
Custom["Resolver"]["BorderSizePixel"] = 0;
Custom["Resolver"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["Resolver"]["TextSize"] = 25;
Custom["Resolver"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["Resolver"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
Custom["Resolver"]["BackgroundTransparency"] = 1;
Custom["Resolver"]["Size"] = UDim2.new(0.9, 0, 0.15, 0);
Custom["Resolver"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["Resolver"]["Text"] = [[Resolver : OFF]];
Custom["Resolver"]["Name"] = [[Resolver]];
Custom["Resolver"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame.Resolver.UIPadding
Custom["e"] = Instance.new("UIPadding", Custom["Resolver"]);
Custom["e"]["PaddingLeft"] = UDim.new(0, 10);

-- StarterGui.SimpleInfo.Main.Frame.Aimlock
Custom["Aimlock"] = Instance.new("TextLabel", Custom["5"]);
Custom["Aimlock"]["BorderSizePixel"] = 0;
Custom["Aimlock"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["Aimlock"]["TextSize"] = 25;
Custom["Aimlock"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["Aimlock"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
Custom["Aimlock"]["BackgroundTransparency"] = 1;
Custom["Aimlock"]["Size"] = UDim2.new(0.9, 0, 0.15, 0);
Custom["Aimlock"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["Aimlock"]["Text"] = [[Aimlock : OFF]];
Custom["Aimlock"]["Name"] = [[Aimlock]];
Custom["Aimlock"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame.Aimlock.UIPadding
Custom["10"] = Instance.new("UIPadding", Custom["Aimlock"]);
Custom["10"]["PaddingLeft"] = UDim.new(0, 10);

-- StarterGui.SimpleInfo.Main.Frame.Username
Custom["Username"] = Instance.new("TextLabel", Custom["5"]);
Custom["Username"]["TextWrapped"] = true;
Custom["Username"]["BorderSizePixel"] = 0;
Custom["Username"]["TextScaled"] = true;
Custom["Username"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
Custom["Username"]["TextSize"] = 25;
Custom["Username"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
Custom["Username"]["TextColor3"] = Color3.fromRGB(226, 226, 226);
Custom["Username"]["BackgroundTransparency"] = 1;
Custom["Username"]["Size"] = UDim2.new(0.9, 0, 0.15, 0);
Custom["Username"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
Custom["Username"]["Text"] = [[USERNAME]];
Custom["Username"]["Name"] = [[Username]];
Custom["Username"]["Position"] = UDim2.new(0.05, 0, 0.02, 0);

-- StarterGui.SimpleInfo.Main.Frame.Username.UIPadding
Custom["12"] = Instance.new("UIPadding", Custom["Username"]);
Custom["12"]["PaddingLeft"] = UDim.new(0, 10);

-- StarterGui.SimpleInfo.Main.LocalScript
Custom["13"] = Instance.new("LocalScript", Custom["2"]);

return Custom["1"], require;
